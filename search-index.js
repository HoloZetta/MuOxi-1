var N=null,E="",T="t",U="u",searchIndex={};
var R=["result","ConnStates","sender","clientdata","to_owned","clone_into","string","try_from","try_into","borrow","borrow_mut","type_id","formatter","on_message","response","ClientData","WebSocketServer","serialize","mongoresult","database","collection","filteron","document","updateoptions","db::clients","db::utils","deserialize","DatabaseHandler","ClientDB","Character","FilterOn","MongoDocument","typeid","clients","db::templates","tcpstream","muoxi_staging","AwaitingAcctName","NewAcctName","MainMenu","EnterGame","connstate","name_mut","option","on_next","mainmenu","on_new_acct","socketaddr","copyover","muoxi_staging::comms","muoxi_staging::connstates","muoxi_staging::copyover","newacctname","entergame","newacct","connstatemessages","awaitingacctname","context","ClientAccount","ConnState","ConnStateMessages","NewAcct","CopyOver","connstates","jsonfile","JsonFile"];
searchIndex["db"]={"doc":"Rust implmentation of MongoDB Client. One must have…","i":[[3,R[27],"db","Wrapper to MongoDB running in background",N,N],[12,"client",E,"Holds the actual client handler to MongoDB",0,N],[12,"db",E,"Database handler within MongoDB set using…",0,N],[0,"templates",E,"Defines the different structures that are serializable to…",N,N],[3,R[28],R[34],"Struct that holds information about connected clients",N,N],[12,"uid",E,"Unique 8 byte id",1,N],[12,"name",E,"name for connected clients",1,N],[12,"ip",E,"ip address where client is coming from",1,N],[12,"port",E,"port client is connected on",1,N],[12,"state",E,"current connection state",1,N],[3,R[29],E,"This WILL change, as this struct is just for testing…",N,N],[12,"uid",E,E,2,N],[12,"name",E,E,2,N],[12,"class",E,E,2,N],[12,"gold",E,E,2,N],[6,"UID",E,E,N,N],[0,"utils","db","List of utilities and common data structures",N,N],[4,R[30],R[25],"Used for filtering documents within collection",N,N],[13,"UID",E,"Unique 8 byte address for each MuOxi object",3,N],[13,"NAME",E,"Name of MuOxi object.",3,N],[5,"gen_uid",E,"Creates a unique 8 byte address first 4 bytes is timestamp…",N,[[],["uid"]]],[5,"bson_to_object",E,"Attempts to convert BSON::Document to T",N,[[[R[22]]],[["mongodocument"],["decoderresult"],[R[26]],[R[17]]]]],[5,"json_to_object",E,"Attempts to convert serde_json::Value to T",N,[[["value"]],[[R[17]],["deserializeowned"],["jsondecoderresult"]]]],[6,"JsonDecoderResult",E,E,N,N],[6,"UID",E,E,N,N],[8,R[31],E,"trait needed by objects in order to be used within MuOxi…",N,N],[10,"name",E,E,4,[[["self"]],[R[6]]]],[10,"uid",E,E,4,[[["self"]],["uid"]]],[11,"new","db","Create a new handler to MongoDB",0,[[[R[6]]],[R[18]]]],[11,"db_name",E,"retrieve current database name",0,[[["self"]],["str"]]],[11,"set_db",E,"set database within client, all actions will be targeted…",0,[[["self"],["str"]],[R[18]]]],[11,"get_db",E,"Returns reference to Database Handler, if db is not set it…",0,[[["self"]],[[R[19]],[R[18],[R[19]]]]]],[11,"get_collection",E,"Returns Collection within current database",0,[[["self"],["str"]],[[R[20]],[R[18],[R[20]]]]]],[11,"collection_exists",E,"Checks if collection exists within database",0,[[["self"],[R[20]]],[[R[18],["bool"]],["bool"]]]],[11,"insert_one",E,"Attempts to serialize a rust object into a valid mongo…",0,[[[T],[R[20]],["self"]],[R[18]]]],[11,"doc_exists",E,"Check to see if a particular document exists within data…",0,[[[T],[R[20]],["self"],[R[21]]],[[R[18],["bool"]],["bool"]]]],[11,"get_docs",E,"Attempts to get a Database Cursor to all documents…",0,[[[T],[R[20]],["self"],[R[21]]],[["cursor"],[R[18],["cursor"]]]]],[11,"get_doc",E,"Attempts to return a single Document within Collection",0,[[[R[21]],[T],[R[20]],["self"]],[[R[18],[R[43]]],[R[43],[R[22]]]]]],[11,"update",E,"Updates documents in collection based on FilterOn Updates…",0,[[[T],[R[20]],[R[23]],["self"],[R[43],[R[23]]],[R[21]]],[R[18]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"],[T]]]],[11,R[7],E,E,0,[[[U]],[R[0]]]],[11,R[8],E,E,0,[[],[R[0]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[32]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",R[34],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"],[T]]]],[11,R[7],E,E,1,[[[U]],[R[0]]]],[11,R[8],E,E,1,[[],[R[0]]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[32]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"],[T]]]],[11,R[7],E,E,2,[[[U]],[R[0]]]],[11,R[8],E,E,2,[[],[R[0]]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[32]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"into",R[25],E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[7],E,E,3,[[[U]],[R[0]]]],[11,R[8],E,E,3,[[],[R[0]]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[32]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"name",R[34],E,1,[[["self"]],[R[6]]]],[11,"uid",E,E,1,[[["self"]],["uid"]]],[11,"name",E,E,2,[[["self"]],[R[6]]]],[11,"uid",E,E,2,[[["self"]],["uid"]]],[11,"clone",E,E,1,[[["self"]],["clientdb"]]],[11,"clone",E,E,2,[[["self"]],["character"]]],[11,"clone","db",E,0,[[["self"]],["databasehandler"]]],[11,"fmt",R[34],E,1,[[["self"],[R[12]]],[R[0]]]],[11,"fmt",E,E,2,[[["self"],[R[12]]],[R[0]]]],[11,"fmt","db",E,0,[[["self"],[R[12]]],[R[0]]]],[11,R[17],R[34],E,1,[[["self"],["__s"]],[R[0]]]],[11,R[17],E,E,2,[[["self"],["__s"]],[R[0]]]],[11,R[26],E,E,1,[[["__d"]],[R[0]]]],[11,R[26],E,E,2,[[["__d"]],[R[0]]]]],"p":[[3,R[27]],[3,R[28]],[3,R[29]],[4,R[30]],[8,R[31]]]};
searchIndex["muoxi_engine"]={"doc":"The main MuOxi Game server. This is where all the game…","i":[],"p":[]};
searchIndex["muoxi_sandbox"]={"doc":E,"i":[],"p":[]};
searchIndex["muoxi_staging"]={"doc":"Main Proxy Staging TCP Server","i":[[5,"send",R[36],"Friendly async wrapper to sending messages to client object",N,[[["client"],["str"]]]],[5,"get",E,"Friendly async wrapper around recieving message from…",N,[[["client"]]]],[5,"process",E,"Main processing piece of logic, once a connection is…",N,[[["arc",["mutex"]],[R[35]],["mutex",["server"]]]]],[5,"transfer",E,"Turns the staging server into a full proxy server,…",N,[[[R[35]],[R[6]]]]],[0,"comms",E,"Definitions and declarations of data structures relating…",N,N],[3,R[58],R[49],"struct holding client account information",N,N],[12,"name",E,E,0,N],[12,"ncharacters",E,E,0,N],[3,"Client",E,"Wrapper around connected socket, this is non-persistent…",N,N],[12,"uid",E,E,1,N],[12,"state",E,E,1,N],[12,"lines",E,E,1,N],[12,"addr",E,E,1,N],[3,"Comms",E,"Server owned structure that holds each clients SocketAddr…",N,N],[12,"0",E,E,2,N],[12,"1",E,E,2,N],[3,"Server",E,"Shared ownership structure between all connected clients.",N,N],[12,R[33],E,"Holds information regarding connected clients",3,N],[12,"accounts",E,"Holds account information for each client",3,N],[4,"Message",E,"The types of message recieved",N,N],[13,"FromClient",E,"Message recieved from connected client",4,N],[13,"OnRx",E,"Message recieved from shared Rx",4,N],[6,"UID",E,"this will change, as UID needs to be u64 to sync with…",N,N],[6,"Tx",E,E,N,N],[6,"Rx",E,E,N,N],[11,"new",E,E,0,[[[R[6]]],["self"]]],[11,"new",E,E,1,[[["mutex",["server"]],[R[35]],["uid"],["arc",["mutex"]]]]],[11,"new",E,E,3,[[],["self"]]],[11,"broadcast",E,E,3,[[[R[47]],["str"],["self"]]]],[0,R[63],R[36],"This entire module will be scraped... don't use.",N,N],[3,R[37],R[50],E,N,N],[3,R[38],E,E,N,N],[3,R[39],E,E,N,N],[3,R[40],E,E,N,N],[3,"Next",E,E,N,N],[3,R[61],E,E,N,N],[4,R[59],E,E,N,N],[13,"Error",E,E,5,N],[13,R[37],E,E,5,N],[13,R[38],E,E,5,N],[13,R[39],E,E,5,N],[13,R[40],E,E,5,N],[4,R[60],E,E,N,N],[13,R[61],E,E,6,N],[13,"Next",E,E,6,N],[11,"awaiting_acct_name",E,E,5,[[[R[6]]],[R[41]]]],[11,"new_acct_name",E,E,5,[[[R[6]]],[R[41]]]],[11,"main_menu",E,E,5,[[],[R[41]]]],[11,"enter_game",E,E,5,[[],[R[41]]]],[11,"error",E,E,5,[[],[R[41]]]],[11,"new",E,E,7,[[[R[6]]],["self"]]],[11,R[46],E,E,5,[[[R[54]]],[R[41]]]],[11,R[44],E,E,5,[[["next"]],[R[41]]]],[11,"execute",E,E,5,[[[R[55]]],[R[41]]]],[11,"name",E,E,8,[[["self"]],[R[6]]]],[11,R[42],E,E,8,[[["self"]],[R[6]]]],[11,"name",E,E,5,[[["self"]],[[R[43],[R[6]]],[R[6]]]]],[11,R[42],E,E,5,[[["self"]],[[R[6]],[R[43],[R[6]]]]]],[11,R[44],E,E,9,[[["next"]],[R[45]]]],[11,R[44],E,E,8,[[["next"]],[R[45]]]],[11,R[46],E,E,8,[[[R[54]]],[R[52]]]],[11,"new",E,E,8,[[],["self"]]],[11,R[44],E,E,10,[[["next"]],[R[53]]]],[11,R[44],E,E,11,[[["next"]],[R[45]]]],[0,R[48],R[36],"A custom reimplementation of tokio::io::copy",N,N],[3,R[62],R[51],"Asynchronously copies the entire contents of a reader into…",N,N],[5,"copy",E,E,N,[[["w"],["r"],[R[47]]],[["sized"],[R[48]]]]],[7,"GAME_ADDR",R[36],"Current listening port of the MuOxi game engine",N,N],[7,"PROXY_ADDR",E,"Current listening port of the staging proxy server",N,N],[11,"into",R[49],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[7],E,E,0,[[[U]],[R[0]]]],[11,R[8],E,E,0,[[],[R[0]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[32]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[7],E,E,1,[[[U]],[R[0]]]],[11,R[8],E,E,1,[[],[R[0]]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[32]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"try_poll_next",E,E,1,[[[R[57]],["s"],["pin"]],[[R[43],[R[0]]],["poll",[R[43]]]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[7],E,E,2,[[[U]],[R[0]]]],[11,R[8],E,E,2,[[],[R[0]]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[32]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[7],E,E,3,[[[U]],[R[0]]]],[11,R[8],E,E,3,[[],[R[0]]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[32]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[7],E,E,4,[[[U]],[R[0]]]],[11,R[8],E,E,4,[[],[R[0]]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[32]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"into",R[50],E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[4],E,E,8,[[["self"]],[T]]],[11,R[5],E,E,8,[[["self"],[T]]]],[11,R[7],E,E,8,[[[U]],[R[0]]]],[11,R[8],E,E,8,[[],[R[0]]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[32]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[4],E,E,9,[[["self"]],[T]]],[11,R[5],E,E,9,[[["self"],[T]]]],[11,R[7],E,E,9,[[[U]],[R[0]]]],[11,R[8],E,E,9,[[],[R[0]]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[32]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[4],E,E,10,[[["self"]],[T]]],[11,R[5],E,E,10,[[["self"],[T]]]],[11,R[7],E,E,10,[[[U]],[R[0]]]],[11,R[8],E,E,10,[[],[R[0]]]],[11,R[9],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[32]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[4],E,E,11,[[["self"]],[T]]],[11,R[5],E,E,11,[[["self"],[T]]]],[11,R[7],E,E,11,[[[U]],[R[0]]]],[11,R[8],E,E,11,[[],[R[0]]]],[11,R[9],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[32]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[4],E,E,12,[[["self"]],[T]]],[11,R[5],E,E,12,[[["self"],[T]]]],[11,R[7],E,E,12,[[[U]],[R[0]]]],[11,R[8],E,E,12,[[],[R[0]]]],[11,R[9],E,E,12,[[["self"]],[T]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[32]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[4],E,E,7,[[["self"]],[T]]],[11,R[5],E,E,7,[[["self"],[T]]]],[11,R[7],E,E,7,[[[U]],[R[0]]]],[11,R[8],E,E,7,[[],[R[0]]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[32]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[["self"]],[T]]],[11,R[5],E,E,5,[[["self"],[T]]]],[11,R[7],E,E,5,[[[U]],[R[0]]]],[11,R[8],E,E,5,[[],[R[0]]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[32]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[4],E,E,6,[[["self"]],[T]]],[11,R[5],E,E,6,[[["self"],[T]]]],[11,R[7],E,E,6,[[[U]],[R[0]]]],[11,R[8],E,E,6,[[],[R[0]]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[32]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"into",R[51],E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[7],E,E,13,[[[U]],[R[0]]]],[11,R[8],E,E,13,[[],[R[0]]]],[11,R[9],E,E,13,[[["self"]],[T]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[32]]]],[11,"vzip",E,E,13,[[],["v"]]],[11,"try_poll",E,E,13,[[["pin"],["f"],[R[57]]],["poll"]]],[11,"clone",R[50],E,5,[[["self"]],[R[41]]]],[11,"clone",E,E,8,[[["self"]],[R[56]]]],[11,"clone",E,E,9,[[["self"]],[R[52]]]],[11,"clone",E,E,10,[[["self"]],[R[45]]]],[11,"clone",E,E,11,[[["self"]],[R[53]]]],[11,"clone",E,E,12,[[["self"]],["next"]]],[11,"clone",E,E,7,[[["self"]],[R[54]]]],[11,"clone",E,E,6,[[["self"]],[R[55]]]],[11,"eq",E,E,5,[[["self"],[R[41]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[41]]],["bool"]]],[11,"eq",E,E,8,[[[R[56]],["self"]],["bool"]]],[11,"ne",E,E,8,[[[R[56]],["self"]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[52]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[52]]],["bool"]]],[11,"eq",E,E,10,[[[R[45]],["self"]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[53]]],["bool"]]],[11,"eq",E,E,12,[[["next"],["self"]],["bool"]]],[11,"eq",E,E,7,[[[R[54]],["self"]],["bool"]]],[11,"ne",E,E,7,[[[R[54]],["self"]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[55]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[55]]],["bool"]]],[11,"fmt",R[49],E,4,[[["self"],[R[12]]],[R[0]]]],[11,"fmt",E,E,0,[[["self"],[R[12]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[12]]],[R[0]]]],[11,"fmt",E,E,2,[[["self"],[R[12]]],[R[0]]]],[11,"fmt",E,E,3,[[["self"],[R[12]]],[R[0]]]],[11,"fmt",R[50],E,5,[[["self"],[R[12]]],[R[0]]]],[11,"fmt",E,E,8,[[["self"],[R[12]]],[R[0]]]],[11,"fmt",E,E,9,[[["self"],[R[12]]],[R[0]]]],[11,"fmt",E,E,10,[[["self"],[R[12]]],[R[0]]]],[11,"fmt",E,E,11,[[["self"],[R[12]]],[R[0]]]],[11,"fmt",E,E,12,[[["self"],[R[12]]],[R[0]]]],[11,"fmt",E,E,7,[[["self"],[R[12]]],[R[0]]]],[11,"fmt",E,E,6,[[["self"],[R[12]]],[R[0]]]],[11,"fmt",R[51],E,13,[[["self"],[R[12]]],[R[0]]]],[11,"poll",E,E,13,[[[R[57]],["self"],["pin"]],[["poll",[R[0]]],[R[0],["u64"]]]]],[11,"poll_next",R[49],E,1,[[[R[57]],["self"],["pin"]],[[R[43]],["poll",[R[43]]]]]]],"p":[[3,R[58]],[3,"Client"],[3,"Comms"],[3,"Server"],[4,"Message"],[4,R[59]],[4,R[60]],[3,R[61]],[3,R[37]],[3,R[38]],[3,R[39]],[3,R[40]],[3,"Next"],[3,R[62]]]};
searchIndex["muoxi_watchdog"]={"doc":"WatchDog that monitors the custom defined `.json` files…","i":[[4,R[65],"muoxi_watchdog","Different `.json` storage files that need to be monitored",N,N],[13,"Accounts",E,"holds account information ex: number of characters of…",0,N],[13,"Players",E,"holds all character information",0,N],[5,"read_file",E,"simple wrapper to read from json file and return…",N,[[["str"]],[["value"],[R[0],["value"]]]]],[5,"trigger_upload",E,"main function that triggers upload protocols for each…",N,[[[R[64]]],[[R[0],["box"]],["box",["error"]]]]],[7,"ACCOUNTS",E,E,N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"],[T]]]],[11,R[7],E,E,0,[[[U]],[R[0]]]],[11,R[8],E,E,0,[[],[R[0]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[32]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"clone",E,E,0,[[["self"]],[R[64]]]],[11,"fmt",E,E,0,[[["self"],[R[12]]],[R[0]]]]],"p":[[4,R[65]]]};
searchIndex["muoxi_web"]={"doc":"Handles all things related to WebSocketServer Like finding…","i":[[3,R[15],"muoxi_web",E,N,N],[12,"ip",E,E,0,N],[12,"token",E,E,0,N],[12,"in_buf",E,E,0,N],[12,"out_buf",E,E,0,N],[3,"Clients",E,E,N,N],[12,"client_list",E,E,1,N],[3,R[16],E,E,N,N],[11,"new",E,E,1,[[],["self"]]],[11,"insert",E,E,1,[[["self"],[R[6]],[R[2]]],[R[0]]]],[11,"remove",E,E,1,[[["self"],[R[2]]],[[R[43],[R[3]]],[R[3]]]]],[11,"new",E,E,2,[[["mutex",[R[33]]],["arc",["mutex"]],[R[2]]],["self"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"],[T]]]],[11,R[7],E,E,0,[[[U]],[R[0]]]],[11,R[8],E,E,0,[[],[R[0]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[32]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"],[T]]]],[11,"to_string",E,E,1,[[["self"]],[R[6]]]],[11,R[7],E,E,1,[[[U]],[R[0]]]],[11,R[8],E,E,1,[[],[R[0]]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[32]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[7],E,E,2,[[[U]],[R[0]]]],[11,R[8],E,E,2,[[],[R[0]]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[32]]]],[11,R[13],E,E,2,[[["self"],["message"]],[[R[0],["error"]],["error"]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"clone",E,E,0,[[["self"]],[R[3]]]],[11,"clone",E,E,1,[[["self"]],[R[33]]]],[11,"eq",E,E,0,[[[R[3]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[3]],["self"]],["bool"]]],[11,"fmt",E,E,1,[[["self"],[R[12]]],[R[0]]]],[11,"fmt",E,E,0,[[["self"],[R[12]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[12]]],[R[0]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,R[13],E,E,2,[[["self"],["message"]],[R[0]]]],[11,"on_open",E,E,2,[[["self"],["handshake"]],[R[0]]]],[11,"on_request",E,E,2,[[["request"],["self"]],[[R[0],[R[14]]],[R[14]]]]],[11,"on_close",E,E,2,[[["str"],["self"],["closecode"]]]]],"p":[[3,R[15]],[3,"Clients"],[3,R[16]]]};
searchIndex["states"]={"doc":E,"i":[[4,R[1],"states",E,N,N],[13,"AwaitingName",E,E,0,N],[13,"AwaitingPassword",E,E,0,N],[13,"AwaitingNewName",E,E,0,N],[13,"AwaitingNewPassword",E,E,0,N],[13,"ConfirmNewPassword",E,E,0,N],[13,R[39],E,E,0,N],[13,"Playing",E,E,0,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"],[T]]]],[11,R[7],E,E,0,[[[U]],[R[0]]]],[11,R[8],E,E,0,[[],[R[0]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[32]]]],[11,"clone",E,E,0,[[["self"]],[R[63]]]],[11,"fmt",E,E,0,[[["self"],[R[12]]],[R[0]]]],[11,R[17],E,E,0,[[["self"],["__s"]],[R[0]]]],[11,R[26],E,E,0,[[["__d"]],[R[0]]]]],"p":[[4,R[1]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);